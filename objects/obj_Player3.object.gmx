<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=global.Player3Sprite
image_index=2
image_speed=0
ExhaustTimer=0
DamageTint=0
PlayerHit=false
ShootFire=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.P3CTRL="ARROWKeyboard"
{
VMovement=keyboard_check(vk_down)-keyboard_check(vk_up)
HMovement=keyboard_check(vk_right)-keyboard_check(vk_left)
if keyboard_check_pressed(ord('Z')){if ShootFire=true{ShootFire=false}else{ShootFire=true}}
}

if global.P3CTRL="WASDKeyboard"
{
VMovement=keyboard_check(ord('S'))-keyboard_check(ord('W'))
HMovement=keyboard_check(ord('D'))-keyboard_check(ord('A'))
if keyboard_check_pressed(ord('K')){if ShootFire=true{ShootFire=false}else{ShootFire=true}}
}

if global.P3CTRL="Gamepad0"
{
VMovement=gamepad_button_check(0,gp_padd)-gamepad_button_check(0,gp_padu)
HMovement=gamepad_button_check(0,gp_padr)-gamepad_button_check(0,gp_padl)
if gamepad_button_check_pressed(0,gp_face3){if ShootFire=true{ShootFire=false}else{ShootFire=true}}
} 

if global.P3CTRL="Gamepad1"
{
VMovement=gamepad_button_check(1,gp_padd)-gamepad_button_check(1,gp_padu)
HMovement=gamepad_button_check(1,gp_padr)-gamepad_button_check(1,gp_padl)
if gamepad_button_check_pressed(1,gp_face3){if ShootFire=true{ShootFire=false}else{ShootFire=true}}
}

if global.P3CTRL="Gamepad2"
{
VMovement=gamepad_button_check(2,gp_padd)-gamepad_button_check(2,gp_padu)
HMovement=gamepad_button_check(2,gp_padr)-gamepad_button_check(2,gp_padl)
if gamepad_button_check_pressed(2,gp_face3){if ShootFire=true{ShootFire=false}else{ShootFire=true}}
}

if global.P3CTRL="Gamepad3"
{
VMovement=gamepad_button_check(3,gp_padd)-gamepad_button_check(3,gp_padu)
HMovement=gamepad_button_check(3,gp_padr)-gamepad_button_check(3,gp_padl)
if gamepad_button_check_pressed(3,gp_face3){if ShootFire=true{ShootFire=false}else{ShootFire=true}}
}

if ShootFire=true{instance_create(x,y,obj_Bullet3)}

image_angle=point_direction(x,y,global.PhaseTargetX,global.PhaseTargetY)-90
y+=VMovement*global.Player3Speed
x+=HMovement*global.Player3Speed
if room!=rm_EndScreenRoom
{
x=clamp(x,0,room_width-75)
y=clamp(y,0,room_height)
}

ExhaustTimer+=1
if ExhaustTimer=1{ID=instance_create(x,y,obj_Exhaust) ExhaustTimer=0}
if room!=rm_EndScreenRoom
{
if obj_MainGameRoom_Host.Powerup_Damage="obj_Player3"{with(ID){image_blend=c_red}}
if obj_MainGameRoom_Host.Powerup_Shield="obj_Player3"{with(ID){image_blend=c_blue}}
if obj_MainGameRoom_Host.Powerup_Movement="obj_Player3"{with(ID){image_blend=c_green}}
if obj_MainGameRoom_Host.Powerup_NHB="obj_Player3"{with(ID){image_blend=c_yellow}}
}
image_blend=merge_colour(c_white,c_red,DamageTint/120)
if DamageTint!=0{DamageTint-=1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
